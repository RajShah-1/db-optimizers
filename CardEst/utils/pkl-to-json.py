#!/usr/bin/env python3
'''
Utility script to convert a pickled histogram dictionary to a JSON file.

This is used primarily for converting the histograms.pkl file generated by the
HistogramEstimator to a JSON file for manual inspection.
'''

import os
import pickle
import json

def convert_pickle_to_json(pickle_path='./data/histograms.pkl', json_path='histograms.json'):
    if not os.path.exists(pickle_path):
        print(f"Pickle file '{pickle_path}' does not exist.")
        return

    # Load the histogram dictionary from the pickle file.
    with open(pickle_path, 'rb') as f:
        histograms = pickle.load(f)
    
    # Convert the dictionary to a JSON-serializable format.
    # Since the original keys are tuples (table, column) and values are lists of tuples,
    # we convert each key to a string and each bucket tuple to a list.
    converted = {}
    for key, buckets in histograms.items():
        table, column = key
        # Create a new key string using a delimiter (e.g., "::")
        new_key = f"{table}::{column}"
        # Convert each bucket tuple (bucket_min, bucket_max, count) into a list.
        converted[new_key] = [list(bucket) for bucket in buckets]

    with open(json_path, 'w') as f:
        json.dump(converted, f, indent=4)
    
    print(f"Successfully converted '{pickle_path}' to '{json_path}'.")

if __name__ == '__main__':
    convert_pickle_to_json()
